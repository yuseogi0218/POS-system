services:
  mysqldb:
    container_name: mysqldb
    restart: always
    image: mysql:9.0.1
    volumes:
      - ./db:/var/lib/mysql
    command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    environment:
      MYSQL_DATABASE: pos
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3307:3306"
    networks:
      - my-network

  redisdb:
    container_name: redisdb
    image: redis
    ports:
      - "6379:6379"
    networks:
      - my-network

  batch-redis:
    container_name: batch-redis
    image: redis
    ports:
      - "6380:6379"
    networks:
      - my-network

  zookeeper:
    image: zookeeper:3.9.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my-network

networks:
  my-network:
    name: my-network
    driver: bridge
